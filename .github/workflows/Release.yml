name: Release

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'temurin'

      - name: Build and package
        run: mvn clean package

      - name: List files in target directory
        run: ls -R ./target

      - name: Get project version
        id: get_version
        run: echo "::set-output name=version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)"

      - name: Create release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME="${{ steps.get_version.outputs.version }}"
          BODY="This is the release for version $TAG_NAME"

          RESPONSE=$(curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -d '{
              "tag_name": "'"$TAG_NAME"'",
              "target_commitish": "'"$GITHUB_SHA"'",
              "name": "Release $'"${{ steps.get_version.outputs.version }}'"',
              "body": "'"$BODY"'",
              "draft": false,
              "prerelease": false
            }' \
            "https://api.github.com/repos/${{ github.repository }}/releases")

          UPLOAD_URL=$(echo "$RESPONSE" | jq -r '.upload_url')
          UPLOAD_URL="${UPLOAD_URL%\{*}" # Remove extra parameters from the URL

          echo "::set-output name=upload_url::$UPLOAD_URL"

      - name: Upload artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target
          asset_name: EssensGetter_API.jar
          asset_content_type: application/java-archive
